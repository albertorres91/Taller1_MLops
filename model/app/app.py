# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11uV8hX4zcBU8qiJ6QuwUvXAeVddeqW-g
"""

# app.py
import joblib
import os

# Define el nombre del archivo del modelo
MODEL_FILENAME = "disease_classifier_pipeline.joblib"

# Construye la ruta al archivo del modelo DENTRO del contenedor.
# Asumimos que app.py y model.joblib estarán en el mismo directorio
# dentro del contenedor (definido por WORKDIR y COPY en el Dockerfile).
# os.path.dirname(__file__) obtiene el directorio donde se está ejecutando app.py
model_path = os.path.join(os.path.dirname(__file__), MODEL_FILENAME)

print(f"Intentando cargar el modelo desde: {model_path}")

try:
    # Verifica si el archivo existe antes de intentar cargarlo
    if os.path.exists(model_path):
        # Carga el modelo usando joblib
        model = joblib.load(model_path)
        print("¡Modelo cargado exitosamente!")
        print(f"Tipo de modelo: {type(model)}")

        # --- Aquí puedes agregar el código para usar tu modelo ---
        # Ejemplo: hacer una predicción (necesitarás datos de entrada)
        # try:
        #     # Supongamos que tu modelo espera un array de numpy
        #     import numpy as np
        #     sample_input = np.array([[1, 2, 3, 4]]) # Ajusta esto a tu modelo
        #     prediction = model.predict(sample_input)
        #     print(f"Predicción de ejemplo: {prediction}")
        # except Exception as pred_e:
        #     print(f"Error al usar el modelo para predecir: {pred_e}")
        # ---------------------------------------------------------

    else:
        print(f"Error: Archivo del modelo no encontrado en {model_path}")
        print("Contenido del directorio actual:")
        try:
            print(os.listdir(os.path.dirname(__file__)))
        except Exception as list_e:
            print(f"No se pudo listar el directorio: {list_e}")

except Exception as e:
    print(f"Error al cargar el modelo: {e}")

# Si estás creando una API (con Flask/FastAPI), aquí iniciarías el servidor.
# Si es solo un script, podría terminar aquí o hacer más trabajo.